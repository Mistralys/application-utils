v1.9.0
- HTMLTag: Added the utility class `HTMLTag` to render HTML tags.
- AttributeCollection: Added the utility class `AttributeCollection` to handle HTML tag attributes.
- StringBuilder: Added support for using callables in the `ifXXX()` methods.
- StringBuilder: Added `linkOpen()` and `linkClose()`.
- Classable: Added the `hasClasses()` method to the interface and trait.
- Code quality: PHPStand recommendations and improvements throughout.
- PHPClassInfo: Fixed the class needlessly requiring the parsed files.
- PHPClassInfo: Added support for traits.
- PHPClassInfo: Fixed false positives found in comments.

v1.8.1
- ThrowableInfo: Fixed exception on unserializing a PDO exception.
- ThrowableInfo: Added support for string-based codes.
- ThrowableInfo: Added serialized data validation.
- ThrowableInfo: Added Microtime support.
- ThrowableInfo: Split some parts into subclasses for maintainability.
- ThrowableInfo: Fixed accessing and persisting exception class name and details.
- Microtime: Added `createNow()`.
- Microtime: Added `createFromDate()`.
- Microtime: Added `createFromMicrotime()`.
- Microtime: Added `createFromString()`.
- Microtime: Added a specific exception class, `Microtime_Exception`.
- Microtime: Added getter methods for the relevant parts (year, month, date...)
- StringBuilder: Added `ifTrue()`, `ifFalse()`, `ifEmpty()`, `ifNotEmpty()`.
- DateInterval: Fixed an issue with negative hour values.

v1.8.0
- RGBAColor: Added the new color information handling tool.
- ThrowableInfo: Added `getFinalCall()` for information on the most recent call.
- ThrowableInfo: Added `hasDetails()` and `getDetails()`.
- ThrowableInfo: Added `renderErrorMessage()` for a human-readable error message.
- OperationResult: Added `makeException()` to use an exception as error message.
- URLInfo: Added filtering of URL-Encoded newlines and tabs.

v1.7.1
- NamedClosure: Added array support for the `$origin` parameter.
- Internals: Added type hints to improve static code analysis.

v1.7.0
- NumberInfo: Added the immutable variant with `parseNumberImmutable()`.
- NumberInfo: Added `ceilEven()` and `floorEven()`.
- NumberInfo: Modernized the class, now using strict typing.
- NumberInfo: Fixed some minor consistency issues with empty numbers.
- NumberInfo: Fixed the value not being updated when using `setNumber()`.
- NumberInfo: Fixed the value having units when the raw value did not have any.

v1.6.0
- OutputBuffering: Added the `OutputBuffering` helper class for simplifying output buffers.
- StringBuilder: Added `tex()` for translation with context information for translators.
- Dependencies: Translation now requires `mistralys/application-localization` v1.4.0.
- Composer: Added `ext-gd` to the list of requirements for the `ImageHelper`.

v1.5.1
- ConvertHelper: Added `boolStrict2string()`, a variant of `string2bool` that only accepts boolean values.
- DateTime: Added the `Microtime` class that extends `DateTime` to add millisecond and microsecond capability.
- Interfaces: Added the interface `Interface_Stringable` for objects that can be converted to string.

v1.5.0
- HTMLHelper: Added the new helper.
- HTMLHelper: Added `stripComments()`.
- HTMLHelper: Added `injectAtEnd()`.
- NumberInfo: Added `hasDecimals()`.
- URLInfo: Added host IP address detection.
- URLInfo: Added the `hasIPAddress()` method to check if the host is an IP address.
- URLInfo: Fixed case sensitivity issues in scheme and hostname.
- URLInfo: Added a fallback scheme detection if `parse_url` did not detect any.
- URLFinder: Parser moved from a regex to a more reliable detection system.
- URLFinder: Added detection of relative paths in HTML documents.
- URLFinder: Added IPv4 address detection, with or without scheme.
- URLFinder: Added `tel:` link detection.
- URLFinder: Added a top level domain extensions lookup helper under `ConvertHelper_URLFinder_DomainExtensions`.
- RegexHelper: Added the `REGEX_IPV4` regex.
- Documentation: Added wiki pages for additional helpers.

v1.4.6
- FileHelper: Added `FileHelper_MimeTypes::registerCustom()`.
- FileHelper: Added `FileHelper_MimeTypes::setMimeType()`.
- ConvertHelper: `date2listLabel` now includes a tooltip with the full date.
- ConvertHelper: Added `var2string()`.
- ConvertHelper: `callback2string()` now works with arrays that are not actually callable.
- NamedClosure: Added the new `NamedClosure` class to access information on the original callable.
- VariableInfo: Fixed some types of callable not being detected.
- VariableInfo: Added the `isCallable()` method.
- VariableInfo: Added support for named closures to fetch callable information.
- URLInfo: Made the reason for excluding a parameter optional when using `excludeParam()`.
- StringBuilder: The `spanned()` method is now public.

v1.4.5
- FileHelper: Added `sendFileAuto()`.
- FileHelper: Added `FileHelper_MimeTypes::canBrowserDisplay()`.

v1.4.4
- FileHelper: Added missing `ODT` file type in the mime types database.
- StringBuilder: Added `eol()` to add newline characters.
- StringBuilder: Added the content parameter to `para()` to create a `<p>` tag.
- General: Tied to `php-parsecsv` v1.2.x, to avoid breaking changes in `v1.3.x` for now.
- General: Replaced `requireCURL()` with a dependency to `ext-curl` in `composer.json`.
- ConvertHelper: Some internal optimizations, splitting into subclasses.

v1.4.3
- URLInfo: Fixed `tel` URLs requiring double slashes to be used to be recognized.

v1.4.2
- FileHelper: Fixed the `copyTree()` method trying to copy folders using `copy()` in some cases.

v1.4.1
- FileHelper: Added the "reduce paths" tool.

v1.4.0
- Minimum PHP version increased to v7.3.
- Updated ForceUTF8 and ParseCSV dependencies to avoid deprecated warnings on PHP7.4+.
- Added utility methods in the CSVHelper class.
- Converted the FileHelper's CSV methods to use the new CSVHelper methods.
- Started adding CSV unit tests.

v1.3.1
- URLInfo: Fixed a type issue with numeric parameter names.
- VariableInfo: Fixed the detection of the "resource" type when a resource has been closed.

v1.3.0
- Added the `Highlighter` class to replace the `ConvertHelper::highlight_xxx` methods.
- The `highlight_xxx` methods in the `ConvertHelper` are now marked as deprecated.
- Added a JSON highlighter.

v1.2.5
- Added the `StringBuilder` helper class for concatenating strings.
- RequestHelper: Fixed `getBody()` method not doing anything.
- Removed `exit()` calls in XMLHelper.

v1.2.4
- RequestHelper: Added `getTimeout()` and `getHeader()`.
- RequestHelper: Added more detailed error message when a CURL request fails.
- RequestHelper: Added the `RequestHelper_CURL` class, with handy constants for CURL error codes.
- FileHelper: Added an error check when trying to save a file to an existing directory path.

v1.2.3
- URLInfo: Now supports adding and removing parameters using `setParam()` and `removeParam()`.
- URLInfo: Added `createConnectionTester` as an extended `tryConnect()`.
- Added `Request::createRefreshParams()` as an extended `getRefreshParams()`.

v1.2.2
- OperationResult: Fixed messages getting lost when importing collections.
- OperationResult: Results keep their original subjects when importing collections.
- URLFinder: Added support for detecting email addresses.
- Classable Trait: Added `classesToAttribute()``.

v1.2.1
- Added the `OperationResult_Collection` class used to handle collections of multiple results.

v1.2.0
- XMLHelper: Added the `XMLHelper_HTMLLoader` class used to create a DOM from HTML documents or fragments.
- XMLHelper: Added the `XMLHelper_LibXML` class with constants of all LibXML error codes.
- XMLHelper: Added the DOMErrors class for an easy OO access to LibXML errors.
- XMLHelper: `string2xml()` now uses the HTML loader.

v1.1.7
- URLFinder: Added the `URLFinder` class used to detect URLs in strings.
- Functions: Added boolean value objects, and functions `valBool()`, `valBoolTrue()`, `valBoolFalse()`.
- ConvertHelper: Added duration constants in the `ConvertHelper_DurationConverter` class.

v1.1.6
- RequestHelper: Fixed incorrect content length in boundaries.
- ConvertHelper: Stripping control characters now fixes broken UTF8 strings.

v1.1.5
- URLInfo: Fixed handling of unencoded unicode characters.
- URLInfo: Added the option to urlencode unicode characters. Default is to leave them as-is.

v1.1.4
- URLInfo: Fixed parameter name parsing stripping spaces.
- URLInfo: Modified encoding to use `%20` instead of `+` (RFC3986).
- URLInfo: Fixed excluded parameters not being highlighted.

v1.1.3
- Added the `OperationResult` class to store information on the outcome of arbitrary tasks.
- RequestHelper: Fixed encoding issues when sending files.
- RequestHelper: Added tests for the sending of files and contents.

v1.1.2
- FileHelper: Added `removeExtension()` `$keepPath` parameter to keep paths intact.
- Request: Internal changes to better handle array values, allowing more filter and validation combinations.
- FileHelper: Added `requireFolderExists()`.
- ConvertHelper: Improved `normalizeTabs()` to better handle edge cases.
- ConvertHelper: Improved `tabs2spaces()`.
- ConvertHelper: Added `spaces2tabs()`.
- ConvertHelper: Added `hidden2visible()` to convert hidden characters to visible strings.
- Traits: Added the Classable trait as drop-in for objects that can have classes set.
- RequestHelper: Internal revamp for better stability.
- URLInfo: Added `tryConnect()` `$verifySSL` parameter to turn off SSL checks.
- URLInfo: Added missing port and credentials to normalized URLs.
- Fixed and added a number of type hints for stability.
- Fixed a method name typo in the request helper.
- Fixed a condition that was always true in `FileHelper::parseSize()`.

v1.1.1
- Composer: Fixed cyclic dependency with localization package.
- PHPStan: Analysis fixes and improvements.
- ConvertHelper: Fixed error when passing non-scalar values to `string2bool()`.
- FileHelper: Fixed `findFiles()` return value and backwards compatibility.
- Transliteration: Removed duplicate array entries.
- VariableInfo: Fixed HTML renderer color definitions.

v1.1.0
- The translation package is now optional to remove the circular dependency. It has been moved from the required packages to the recommended packages section in the composer configuration. If not installed, the native english translations will be used for all texts.
- Byte-related methods incorrectly used Base 2 (1024 bytes per KB). This has been modified to use the standard Base 10 (1000 bytes per KB) by default instead, with the possibility to easily change between both calculation modes.
- Added parseThrowable() and restoreThrowable() functions.
- ThrowableInfo: Added the possibility to serialize an error, and restore it later using that data.
- Traits_Optionable: Added the getArrrayOption() and getIntOption() methods.
- ConvertHelper: Revamped DateInterval related methods to consolidate the code.
- ConvertHelper: Added the parseInterval() function and the DateInterval wrapper.
- ConvertHelper: Revamped byte related methods to use Base 10 as standard.
- ConvertHelper: added the parseSize() and size2bytes() method.
- ImageHelper: added calcAverageColor() and calcAverageColorHex().
- URLInfo: Added the tryConnect() method.
- URLInfo: Added the getParam() method.
- Made all exit() calls optional wherever applicable.
- Moved some of the most complex methods to separate classes.
- Many internal code quality changes.
- Added a number of unit tests.
- Fixed a number of incorrectly documented variable and return types.
- Transliteration: fixed setLowercase() always enabling lowercase.
- Fixed accept header parsing which ignored the `v` parameter of some mime types.
- Code Quality changes, and lots of minor fixes.
